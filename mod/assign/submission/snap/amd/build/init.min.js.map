{"version":3,"sources":["../src/init.js"],"names":["preInit","userid","attemptNumber","loaded","editable","xmlProject","snapFrame","getSnapFrame","contentWindow","onbeforeunload","init","snapIDE","getIDE","getXMLProject","rawOpenProjectString","form","getXMLInput","closest","registerListenerEvents","customizeSnap","document","getElementById","snapWorld","world","children","xmlInput","value","addEventListener","updateProject","snapMenu","sourceSnapMenu","Str","get_string","then","str","menu","activeMenu","addLine","addItem","popup","logo","bottomLeft","catch","controlBar","cloudButton","destroy","projectButton","settingsButton","sourceFixLayout","fixLayout","setRight","left","serializer","serialize","stage"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles the display and events of the Snap! editor.\n *\n * @module     assignsubmission_snap/snap\n * @package   assignsubmission_snap\n * @copyright 2020 Sara Arjona <sara@moodle.com> and Joan Guill√©n <jguille2@xtec.cat>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\n\nexport const preInit = (userid, attemptNumber, loaded, editable, xmlProject) => {\n    var snapFrame = getSnapFrame(userid, attemptNumber);\n    if (snapFrame.contentWindow.onbeforeunload) {\n        snapFrame.contentWindow.onbeforeunload = null;\n        if (loaded) {\n            init(xmlProject, userid, attemptNumber, editable);\n        }\n    } else {\n        preInit(userid, attemptNumber, loaded, editable, xmlProject);\n    }\n};\n\nexport const init = (xmlProject, userid, attemptNumber, editable) => {\n    const snapIDE = getIDE(userid, attemptNumber, xmlProject, editable);\n    if (!xmlProject) {\n        xmlProject = getXMLProject();\n    }\n    if (snapIDE) {\n        if (xmlProject) {\n            // Update the XML project.\n            snapIDE.rawOpenProjectString(xmlProject);\n        }\n        if (editable) {\n            // Register events (to update the hidden xmlproject field when the form is submitted).\n            const form = getXMLInput().closest('form');\n            registerListenerEvents(form, snapIDE);\n        }\n        // Customize Snap! and hide Cloud options.\n        customizeSnap(snapIDE);\n    }\n};\n\nconst getSnapFrame = (userid, attemptNumber) => {\n    return document.getElementById('snap_snap-' + userid + '-' + attemptNumber);\n};\n\nconst getIDE = (userid, attemptNumber) => {\n    const snapFrame = getSnapFrame(userid, attemptNumber);\n    if (snapFrame) {\n        const snapWorld = snapFrame.contentWindow.world;\n        if (snapWorld) {\n            return snapWorld.children[0];\n        }\n    }\n    return false;\n};\n\nconst getXMLProject = () => {\n    let xmlProject = '';\n\n    const xmlInput = getXMLInput();\n    if (xmlInput) {\n        xmlProject = getXMLInput().value;\n    }\n\n    return xmlProject;\n};\n\nconst getXMLInput = () => {\n    return $('input[name=\"snap_xmlproject\"]')[0];\n};\n\nconst registerListenerEvents = (form, snapIDE) => {\n    form.addEventListener('submit',\n        function() {\n            updateProject(snapIDE);\n        });\n};\n\nconst customizeSnap = (snapIDE) => {\n    // Adding Snap! embedded info to Snap! menu\n    if (snapIDE.snapMenu) {\n        snapIDE.sourceSnapMenu = snapIDE.snapMenu;\n        Str.get_string('snap_embedded', 'assignsubmission_snap').then(str => {\n            snapIDE.snapMenu = function() {\n                this.sourceSnapMenu();\n                var menu = this.world().activeMenu;\n                menu.addLine();\n                menu.addItem(str);\n                menu.popup(this.world(), this.logo.bottomLeft());\n            };\n            return true;\n        }).catch(() => {\n            return false;\n        });\n    }\n    // Erasing cloud button\n    if (snapIDE.controlBar.cloudButton) {\n        snapIDE.controlBar.cloudButton.destroy();\n        if (snapIDE.controlBar.projectButton && snapIDE.controlBar.settingsButton) {\n            snapIDE.controlBar.sourceFixLayout = snapIDE.controlBar.fixLayout;\n            snapIDE.controlBar.fixLayout = () => {\n                snapIDE.controlBar.sourceFixLayout();\n                snapIDE.controlBar.projectButton.setRight(snapIDE.controlBar.settingsButton.left() - 5);\n            };\n            snapIDE.controlBar.fixLayout();\n        }\n    }\n};\n\nconst updateProject = (snapIDE) => {\n    const xmlProject = getXMLInput();\n    xmlProject.value = snapIDE.serializer.serialize(snapIDE.stage);\n};\n"],"file":"init.min.js"}